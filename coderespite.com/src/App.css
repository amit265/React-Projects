.full-screen {
  min-height: 100vh;
}

/* <weight>: Use a value from 100 to 900 */
/* 
@font-face {
  font-family: "Albert Sans";
  src: url("../public/fonts/Albert_sans/static/AlbertSans-Regular.ttf")
    format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Albert Sans";
  src: url("../public/fonts/Albert_sans/static/AlbertSans-Bold.ttf")
    format("truetype");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: "Lexend";
  src: url("../public/fonts/Lexend/static/Lexend-Regular.ttf")
    format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Lexend";
  src: url("../public/fonts/Lexend/static/Lexend-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
} */

/* Add more @font-face rules for different weights and styles */

.lexend {
  /* src: url("/fonts/Lexend/static/Lexend-Bold.ttf") format("truetype"); */
  font-family: "Lexend", sans-serif;
  font-optical-sizing: auto;
  font-weight: 500;
  font-style: normal;
}


.MuiAutocomplete-popup {
  border: 1px solid red; /* Temporary border to see the dropdown */
}

.albert-sans {
  /* src: url("/fonts/Albert_sans/static/AlbertSans-Regular.ttf"); */

  font-family: "Albert Sans", sans-serif;
  font-optical-sizing: auto;
  font-weight: 500;
  font-style: normal;
}

/* Define the keyframes for blinking */
@keyframes blink-animation {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

/* Apply blinking animation to the '/' character */
.blink {
  animation: blink-animation 2s 5000; /* Adjust animation duration as needed */
}

.project-item {
  will-change: transform, opacity;
}

/* Custom scrollbar styles */
.scroll-container::-webkit-scrollbar {
  height: 8px;
}

.scroll-container::-webkit-scrollbar-track {
  background: #f1f1f1;
}

.scroll-container::-webkit-scrollbar-thumb {
  background: #888;
}

.scroll-container::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Light theme */
:root {
  --background-color: #edf2f4;
  --text-color: #2b2d42;
  --primary-color: #ef233c; /* Example primary color */
}

/* Dark theme */
@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #2b2d42;
    --text-color: #edf2f4;
    --primary-color: #ef233c; /* Example primary color */
  }
}

* {
  @apply transition-colors duration-300;
  @apply transition-all duration-200;
}

@media (min-width: 1024px) {
  .project-animate {
    position: relative; /* or absolute depending on your layout */
    animation: anime 10s linear infinite alternate;
  }
}

@keyframes anime {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.header-animate {
  animation: headerBounce 0.5s ease-in;
}

@keyframes headerBounce {
  0% {
    transform: translateY(-50px);
  }

  100% {
    transform: translateY(0); /* Slight bounce up to finalize */
  }
}

.main-animate {
  animation: header 600ms ease-in;
}

@keyframes header {
  0% {
    transform: translatey(40%);
  }
  100% {
    transform: translatey(0%);
  }
}

.hero-animate {
  animation: hero 600ms ease-in;
}

@keyframes hero {
  0% {
    transform: translatey(20%);
  }
  100% {
    transform: translatey(0%);
  }
}

/* Base styling for shimmer lines */
.shimmer-effect .shimmer {
  width: 200px;
  height: 300px;
  background: #f6f7f8;
  background: linear-gradient(
    to right,
    #f6f7f8 0%,
    #edeef1 20%,
    #f6f7f8 40%,
    #f6f7f8 100%
  );
  position: relative;
  overflow: hidden;
}

/* Shimmer animation */
.shimmer-effect .shimmer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.8) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: flicker 1.5s infinite;
}

@keyframes flicker {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  10% {
    opacity: 0.3;
    transform: translateX(-20%);
  }
  20% {
    opacity: 0.7;
    transform: translateX(10%);
  }
  30% {
    opacity: 0.4;
    transform: translateX(-15%);
  }
  40% {
    opacity: 0.9;
    transform: translateX(5%);
  }
  50% {
    opacity: 0.5;
    transform: translateX(20%);
  }
  60% {
    opacity: 1;
    transform: translateX(-10%);
  }
  70% {
    opacity: 0.6;
    transform: translateX(15%);
  }
  80% {
    opacity: 0.8;
    transform: translateX(-5%);
  }
  90% {
    opacity: 0.2;
    transform: translateX(25%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
